{"version":3,"sources":["draw.js"],"names":["draw","clear","dt","timer","environment","dayDuration","backgroundBrightness","constrain","brightDir","grey","background","daytime","carIndex","cars","length","car","update","truckIndex","trucks","truck","cityIndex","cities","city","Events","isActive","id","cityDict","Stuttgart","sendCarTo","Nodes","getByName","sendCarHome","evnt","eventType","eventTimes","event","start","enable","trigger","end","disable","fill","Math","round","startOfWorkday","endOfWorkday","debugMagic"],"mappings":";;AAAA,SAASA,IAAT,GAAgB;AACZC;;AAEA,QAAIC,KAAKC,QAAQC,YAAYC,WAA7B;;AAEAC,2BAAuBC,UAAUD,uBAAuBE,SAAjC,EAA4C,CAA5C,EAA+C,GAA/C,CAAvB;AACA,QAAIC,OAAOF,UAAUD,oBAAV,EAAgC,CAAhC,EAAmC,GAAnC,CAAX;;AAEAI,eAAW,GAAX,EAAgB,CAAhB,EAAmBD,IAAnB,EAAyB,GAAzB;;AAEAL,gBAAYO,OAAZ,GAAsBT,KAAKE,YAAYC,WAAvC;;AAEA;;AAEA,SAAI,IAAIO,WAAW,CAAnB,EAAsBA,WAAWC,KAAKC,MAAtC,EAA8CF,UAA9C,EAA0D;AACtD,YAAIG,MAAMF,KAAKD,QAAL,CAAV;;AAEAG,YAAIC,MAAJ;AACH;AACD,SAAI,IAAIC,aAAa,CAArB,EAAwBA,aAAaC,OAAOJ,MAA5C,EAAoDG,YAApD,EAAkE;AAC9D,YAAIE,QAAQD,OAAOD,UAAP,CAAZ;;AAEAE,cAAMH,MAAN;AACH;AACD,SAAI,IAAII,YAAY,CAApB,EAAuBA,YAAYC,OAAOP,MAA1C,EAAkDM,WAAlD,EAA+D;AAC3D,YAAIE,OAAOD,OAAOD,SAAP,CAAX;;AAEA,YAAGG,OAAOC,QAAP,CAAgB,gBAAhB,KAAqCF,KAAKG,EAAL,IAAWC,SAASC,SAAzD,IAAsEzB,KAAK,EAAL,GAAU,CAAnF,EAAsF;AAClFoB,iBAAKM,SAAL,CAAeC,MAAMC,SAAN,CAAgB,WAAhB,CAAf;AACH;;AAED,YAAGP,OAAOC,QAAP,CAAgB,cAAhB,KAAmCF,KAAKG,EAAL,IAAWC,SAASC,SAAvD,IAAoEzB,KAAK,EAAL,GAAU,CAAjF,EAAoF;AAChFoB,iBAAKS,WAAL;AACH;;AAGDT,aAAKN,MAAL;AACH;;AAED,QAAIgB,OAAO,CAAX;;AAEA,SAAI,IAAIC,SAAR,IAAqBC,UAArB,EAAiC;AAC7B,YAAIC,QAAQD,WAAWD,SAAX,CAAZ;;AAEA,YAAG/B,MAAMiC,MAAMC,KAAf,EAAsB;AAClBb,mBAAOc,MAAP,CAAcJ,SAAd;;AAEA,gBAAGA,aAAa,aAAhB,EAA+B;AAC3BV,uBAAOe,OAAP,CAAe,kBAAf;AACH;AACJ;;AAED,YAAGpC,MAAMiC,MAAMI,GAAf,EAAoB;AAChBhB,mBAAOiB,OAAP,CAAeP,SAAf;;AAEA,gBAAGA,aAAa,aAAhB,EAA+B;AAC3BV,uBAAOe,OAAP,CAAe,gBAAf;AACH;AACJ;;AAEDG,aAAK,EAAL;;AAEA;;AAEAT,gBAAQ,CAAR;AACH;;AAED,QAAG9B,MAAMwC,KAAKC,KAAL,CAAWT,WAAWU,cAAX,CAA0BR,KAA1B,GAAkC,CAA7C,CAAT,EAA0D;AACtDb,eAAOe,OAAP,CAAe,UAAf;AACH;;AAED,QAAGpC,MAAMwC,KAAKC,KAAL,CAAWT,WAAWW,YAAX,CAAwBT,KAAxB,GAAgChC,YAAYC,WAAZ,GAA0B,EAArE,CAAT,EAAmF;AAC/EkB,eAAOe,OAAP,CAAe,YAAf;AACH;;AAEDnC,aAAS,CAAT;;AAEA;;AAEA;;AAEA2C;AACH","file":"draw.js","sourcesContent":["function draw() {\n    clear()\n\n    var dt = timer % environment.dayDuration;\n\n    backgroundBrightness = constrain(backgroundBrightness + brightDir, 0, 255)\n    var grey = constrain(backgroundBrightness, 0, 255)\n\n    background(255, 0, grey, 0.5)\n\n    environment.daytime = dt / environment.dayDuration;\n\n    // console.log(environment.daytime)\n\n    for(var carIndex = 0; carIndex < cars.length; carIndex++) {\n        var car = cars[carIndex];\n\n        car.update()\n    }\n    for(var truckIndex = 0; truckIndex < trucks.length; truckIndex++) {\n        var truck = trucks[truckIndex];\n\n        truck.update()\n    }\n    for(var cityIndex = 0; cityIndex < cities.length; cityIndex++) {\n        var city = cities[cityIndex];\n\n        if(Events.isActive('startOfWorkday') && city.id != cityDict.Stuttgart && dt % 10 < 1) {\n            city.sendCarTo(Nodes.getByName('Stuttgart'))\n        }\n\n        if(Events.isActive('endOfWorkday') && city.id == cityDict.Stuttgart && dt % 10 < 1) {\n            city.sendCarHome()\n        }\n\n\n        city.update()\n    }\n\n    var evnt = 0;\n\n    for(var eventType in eventTimes) {\n        var event = eventTimes[eventType]\n\n        if(dt == event.start) {\n            Events.enable(eventType)\n\n            if(eventType == 'nightCharge') {\n                Events.trigger('nightChargeStart')\n            }\n        }\n\n        if(dt == event.end) {\n            Events.disable(eventType)\n\n            if(eventType == 'nightCharge') {\n                Events.trigger('nightChargeEnd')\n            }\n        }\n\n        fill(51)\n\n        // text(eventType + ' - ' + Events.isActive(eventType), 100, 100 + 20 * evnt)\n\n        evnt += 1\n    }\n\n    if(dt == Math.round(eventTimes.startOfWorkday.start / 2)) {\n        Events.trigger('nightEnd')\n    }\n\n    if(dt == Math.round(eventTimes.endOfWorkday.start + environment.dayDuration / 20)) {\n        Events.trigger('nightStart')\n    }\n\n    timer += 1;\n\n    // renderAllNodes()\n\n    // showPathFor(trucks[0])\n\n    debugMagic();\n}\n"]}