{"version":3,"sources":["modules/Car.js"],"names":["Car","home","Nodes","getRandomTown","location","position","createVector","x","y","capacity","charge","dischargeSpeed","chargeSpeed","type","cars","push","driveTo","inCity","applyMatrix","strokeWeight","stroke","fill","chargeToColor","translate","environment","scale","next","rotate","atan2","rect","carSize","resetMatrix","updatePosition","render","Vehicle"],"mappings":";;;;;;;;;;IAAMA,G;;;AACF,mBAAc;AAAA;;AAAA;;AAGV,cAAKC,IAAL,GAAYC,MAAMC,aAAN,EAAZ;AACA,cAAKC,QAAL,GAAgB,MAAKH,IAArB;AACA,cAAKI,QAAL,GAAgBC,aAAa,MAAKF,QAAL,CAAcG,CAA3B,EAA8B,MAAKH,QAAL,CAAcI,CAA5C,CAAhB;AACA,cAAKC,QAAL,GAAgB,EAAhB;AACA,cAAKC,MAAL,GAAc,MAAKD,QAAnB;AACA,cAAKE,cAAL,GAAsB,OAAtB;AACA,cAAKC,WAAL,GAAmB,IAAnB;AACA,cAAKC,IAAL,GAAY,KAAZ;;AAEAC,aAAKC,IAAL;AAZU;AAab;;;;oCAEW;AACR,iBAAKC,OAAL,CAAa,KAAKf,IAAlB;AACH;;;iCAEQ;AACL,gBAAG,KAAKgB,MAAR,EAAgB;AACZ;AACH;;AAEDC;AACAC,yBAAa,CAAb;AACAC,mBAAO,SAAP;AACAC,iBAAKC,cAAc,KAAKZ,MAAL,GAAc,KAAKD,QAAjC,CAAL;AACAc,sBAAU,KAAKlB,QAAL,CAAcE,CAAd,GAAkBiB,YAAYC,KAAxC,EAA+C,KAAKpB,QAAL,CAAcG,CAAd,GAAkBgB,YAAYC,KAA7E;AACA,gBAAG,KAAKC,IAAR,EAAc;AACVC,uBAAOC,MAAM,KAAKvB,QAAL,CAAcG,CAAd,GAAkB,KAAKkB,IAAL,CAAUlB,CAAlC,EAAqC,KAAKH,QAAL,CAAcE,CAAd,GAAkB,KAAKmB,IAAL,CAAUnB,CAAjE,CAAP;AACH;AACDsB,iBACI,CADJ,EAEI,CAFJ,EAGIL,YAAYM,OAAZ,GAAsB,GAH1B,EAIIN,YAAYM,OAJhB,EAKI,CALJ;AAOAC;AACH;;;iCAEQ;AACL,iBAAKC,cAAL;AACA,iBAAKC,MAAL;AACH;;;;EA9CaC,O","file":"Car.js","sourcesContent":["class Car extends Vehicle {\n    constructor() {\n        super()\n\n        this.home = Nodes.getRandomTown();\n        this.location = this.home;\n        this.position = createVector(this.location.x, this.location.y);\n        this.capacity = 24\n        this.charge = this.capacity;\n        this.dischargeSpeed = 0.00185;\n        this.chargeSpeed = 0.07;\n        this.type = 'car'\n\n        cars.push(this);\n    }\n\n    driveHome() {\n        this.driveTo(this.home)\n    }\n\n    render() {\n        if(this.inCity) {\n            return\n        }\n\n        applyMatrix()\n        strokeWeight(1)\n        stroke('#444444')\n        fill(chargeToColor(this.charge / this.capacity))\n        translate(this.position.x * environment.scale, this.position.y * environment.scale)\n        if(this.next) {\n            rotate(atan2(this.position.y - this.next.y, this.position.x - this.next.x))\n        }\n        rect(\n            0,\n            0,\n            environment.carSize * 1.5,\n            environment.carSize,\n            4\n        )\n        resetMatrix()\n    }\n\n    update() {\n        this.updatePosition()\n        this.render()\n    }\n}\n"]}