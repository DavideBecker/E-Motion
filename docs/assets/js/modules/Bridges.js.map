{"version":3,"sources":["modules/Bridges.js"],"names":["updateAmountOfCars","diff","environment","simulation","carAmount","i","Car","removed","cars","splice","console","log","updateAmountOfTrucks","truckAmount","Truck","trucks","rem","workTarget","isBusy","addToQueue","updateAverageStuckCars","$","html","statistics","stuckCarsTotal","daysPassed","stuckCarsToday","updateTruckUptime","newValue"],"mappings":";;AACA,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;AAC9BC,gBAAYC,UAAZ,CAAuBC,SAAvB,IAAoCH,IAApC;;AAEA,QAAGA,OAAO,CAAV,EAAa;AACT,aAAI,IAAII,IAAI,CAAZ,EAAeA,IAAIJ,IAAnB,EAAyBI,GAAzB,EAA8B;AAC1B,gBAAIC,GAAJ;AACH;AACJ;;AAED,QAAGL,OAAO,CAAV,EAAa;AACT,YAAIM,UAAUC,KAAKC,MAAL,CAAY,CAAZ,EAAeR,OAAO,CAAC,CAAvB,CAAd;;AAEAS,gBAAQC,GAAR,CAAY,SAAZ,EAAuBV,OAAO,CAAC,CAA/B,EAAkC,MAAlC,EAA0CM,OAA1C;AACH;AACJ;;AAED,SAASK,oBAAT,CAA8BX,IAA9B,EAAoC;AAChCC,gBAAYC,UAAZ,CAAuBU,WAAvB,IAAsCZ,IAAtC;;AAEA,QAAGA,OAAO,CAAV,EAAa;AACT,aAAI,IAAII,IAAI,CAAZ,EAAeA,IAAIJ,IAAnB,EAAyBI,GAAzB,EAA8B;AAC1B,gBAAIS,KAAJ;AACH;AACJ;;AAED,QAAGb,OAAO,CAAV,EAAa;AACT,YAAIM,UAAUQ,OAAON,MAAP,CAAc,CAAd,EAAiBR,OAAO,CAAC,CAAzB,CAAd;;AAEA,aAAI,IAAIe,GAAR,IAAeT,OAAf,EAAwB;AACpB,gBAAGS,IAAIC,UAAJ,IAAkBD,IAAIE,MAAzB,EAAiC;AAC7BC,2BAAWH,IAAIC,UAAf;AACH;AACJ;AACJ;AACJ;;AAED,SAASG,sBAAT,GAAkC;AAC9BC,MAAE,mBAAF,EAAuBC,IAAvB,CAA4BpB,YAAYqB,UAAZ,CAAuBC,cAAvB,GAAwCtB,YAAYqB,UAAZ,CAAuBE,UAA3F;AACAJ,MAAE,iBAAF,EAAqBC,IAArB,CAA0BpB,YAAYqB,UAAZ,CAAuBG,cAAjD;AACAL,MAAE,iBAAF,EAAqBC,IAArB,CAA0BpB,YAAYqB,UAAZ,CAAuBC,cAAjD;AACH;;AAGD;AACA,SAASG,iBAAT,CAA2BC,QAA3B,EAAqC;AACjC;AACA;AACH","file":"Bridges.js","sourcesContent":["\nfunction updateAmountOfCars(diff) {\n    environment.simulation.carAmount += diff\n\n    if(diff > 0) {\n        for(var i = 0; i < diff; i++) {\n            new Car()\n        }\n    }\n\n    if(diff < 0) {\n        var removed = cars.splice(0, diff * -1);\n\n        console.log('removed', diff * -1, 'cars', removed)\n    }\n}\n\nfunction updateAmountOfTrucks(diff) {\n    environment.simulation.truckAmount += diff\n\n    if(diff > 0) {\n        for(var i = 0; i < diff; i++) {\n            new Truck()\n        }\n    }\n\n    if(diff < 0) {\n        var removed = trucks.splice(0, diff * -1);\n\n        for(var rem in removed) {\n            if(rem.workTarget && rem.isBusy) {\n                addToQueue(rem.workTarget)\n            }\n        }\n    }\n}\n\nfunction updateAverageStuckCars() {\n    $('#stuckCarsAverage').html(environment.statistics.stuckCarsTotal / environment.statistics.daysPassed)\n    $('#stuckCarsToday').html(environment.statistics.stuckCarsToday)\n    $('#stuckCarsTotal').html(environment.statistics.stuckCarsTotal)\n}\n\n\n// Not implementing, is kind of hard to do with the current setup\nfunction updateTruckUptime(newValue) {\n    // environment.simulation.truckUptime = newValue;\n    // eventTimes.nightCharge.start = Math.round(environment.dayDuration * (1 - environment.simulation.truckUptime / 24));\n}\n"]}