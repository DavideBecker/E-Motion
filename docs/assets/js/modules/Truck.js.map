{"version":3,"sources":["modules/Truck.js"],"names":["Truck","busy","location","Nodes","getStuttgart","position","createVector","x","y","capacity","charge","dischargeSpeed","type","workTarget","trucks","push","car","environment","simulation","carChargeLimit","chargeSpeed","diff","totalCarCharge","rescueTarget","isStuck","city","needsCharging","id","parkedCars","length","calculateAverageCharge","queue","shift","driveTo","chargeCar","chargeCity","applyMatrix","fill","strokeWeight","stroke","translate","scale","next","rotate","atan2","rect","truckSize","resetMatrix","isDriving","work","getNewWork","name","updatePosition","render","Vehicle"],"mappings":"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","file":"Truck.js","sourcesContent":["class Truck extends Vehicle {\n    constructor() {\n        super()\n\n        this.busy = false;\n        this.location = Nodes.getStuttgart()\n        this.position = createVector(this.location.x, this.location.y);\n        this.capacity = 400\n        this.charge = this.capacity;\n        this.dischargeSpeed = 0;\n        this.type = 'truck'\n        this.workTarget = false\n\n        trucks.push(this)\n    }\n\n    chargeCar(car) {\n        if(car.charge / car.capacity < environment.simulation.carChargeLimit) { //car.charge / car.capacity < environment.simulation.carChargeLimit) {\n            car.charge += car.chargeSpeed\n        } else {\n            if(car.charge > car.capacity) {\n                var diff = car.charge - car.capacity\n\n                car.charge -= diff\n                environment.simulation.totalCarCharge -= diff\n            }\n            this.busy = false\n            this.rescueTarget = false\n            car.isStuck = false\n        }\n    }\n\n    chargeCity(city) {\n        if(city.needsCharging()) {\n            for(var id in city.parkedCars) {\n                var car = city.parkedCars[id];\n\n                if(car.charge / car.capacity < environment.simulation.carChargeLimit) { //car.charge / car.capacity < environment.simulation.carChargeLimit) {\n                    car.charge += car.chargeSpeed / city.parkedCars.length\n                    environment.simulation.totalCarCharge += car.chargeSpeed / city.parkedCars.length\n                }\n\n                if(car.charge > car.capacity) {\n                    var diff = car.charge - car.capacity\n\n                    car.charge -= diff\n                    environment.simulation.totalCarCharge -= diff\n                }\n            }\n\n            city.calculateAverageCharge();\n        } else {\n            this.busy = false\n            this.rescueTarget = false\n        }\n    }\n\n    getNewWork() {\n        this.busy = true;\n        this.workTarget = queue.shift();\n\n        switch (this.workTarget.type) {\n        case 'car':\n            this.driveTo(this.workTarget.location)\n            break;\n\n        case 'city':\n            this.driveTo(this.workTarget)\n            break;\n\n        default:\n            break;\n        }\n    }\n\n    work() {\n        switch (this.workTarget.type) {\n        case 'car':\n            this.chargeCar(this.workTarget);\n            break;\n\n        case 'city':\n            this.chargeCity(this.workTarget);\n            break;\n\n        default:\n            break;\n        }\n    }\n\n    render() {\n        applyMatrix()\n        fill('#444444')\n        strokeWeight(4)\n        stroke('#37BDFF')\n        translate(this.position.x * environment.scale, this.position.y * environment.scale)\n        if(this.next) {\n            rotate(atan2(this.position.y - this.next.y, this.position.x - this.next.x))\n        }\n        rect(\n            -environment.truckSize * 1.05,\n            0,\n            environment.truckSize / 1.5,\n            environment.truckSize / 1.5,\n            4\n        )\n        rect(\n            0,\n            0,\n            environment.truckSize * 1.5,\n            environment.truckSize,\n            4\n        )\n        resetMatrix()\n    }\n\n    update() {\n        if(this.busy && !this.isDriving) {\n            this.work()\n        } else if(queue.length && !this.busy) {\n            this.getNewWork()\n        } else if(!this.isDriving && this.location.name != 'Stuttgart') {\n            this.driveTo(Nodes.getStuttgart())\n        }\n\n        this.updatePosition()\n        this.render()\n    }\n}\n"]}