{"version":3,"sources":["ui.js"],"names":["stuttgart","Nodes","getByName","calculateCarsChargedPerTruck","chargingCapacity","calculateChargingCapacity","environment","simulation","static","truck","capacity","mileage","distanceToLocations","amountOfCarsThatCanBeCharged","calculateAmountOfCarsThatCanBeCharged","car","carChargeLimit","travelTime","calculateTravelTime","distanceBetweenCharges","averageSpeed","chargeTime","calculateChargeTime","chargeSpeed","chargeCycleTime","calculateChargeCycleTime","averageChargeTime","calculateAverageChargeTime","calculateChargeableCarsInTimeframe","convertTime","truckUptime","calulateCarsChargedPerDay","Math","floor","truckAmount","calulateCarsChargedPerMonth","calulateCarsChargedPerYear","calulateMaxTruckUptime","prettyTime","outputs","updateCalculations","outputId","output","element","html","calculate","$","document","ready","chargesPerDay","chargesPerMonth","chargesPerYear","maxTruckUptime","val","carAmount","click","event","preventDefault","toggleClass","window","dispatchEvent","Event","each","i","el","hasClass","attr","on","$input","siblings","Number","trigger","change","max","diff","console","log","updateAmountOfTrucks","updateAmountOfCars","$chargeLabel","$chargeValue","updateAverageCharge","min","round","totalCarCharge","carCapacity","css","delayedTick","tick","setInterval"],"mappings":"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","file":"ui.js","sourcesContent":["var stuttgart = Nodes.getByName('Stuttgart');\n\nfunction calculateCarsChargedPerTruck() {\n    var chargingCapacity = calculateChargingCapacity(\n        environment.simulation.static.truck.capacity,\n        environment.simulation.static.truck.mileage,\n        environment.simulation.static.distanceToLocations\n    )\n\n    var amountOfCarsThatCanBeCharged = calculateAmountOfCarsThatCanBeCharged(\n        chargingCapacity,\n        environment.simulation.static.car.capacity,\n        environment.simulation.carChargeLimit\n    );\n    var travelTime = calculateTravelTime(\n        environment.simulation.static.distanceBetweenCharges,\n        environment.simulation.static.truck.averageSpeed\n    );\n    var chargeTime = calculateChargeTime(\n        environment.simulation.static.car.capacity,\n        environment.simulation.static.car.chargeSpeed,\n        environment.simulation.carChargeLimit\n    );\n\n    var chargeCycleTime = calculateChargeCycleTime(\n        amountOfCarsThatCanBeCharged,\n        travelTime,\n        chargeTime\n    ) + calculateTravelTime(\n            environment.simulation.static.distanceToLocations,\n            environment.simulation.static.truck.averageSpeed\n        ) * 1000\n\n    var averageChargeTime = calculateAverageChargeTime(\n        amountOfCarsThatCanBeCharged,\n        chargeCycleTime\n    );\n\n    return calculateChargeableCarsInTimeframe(\n        averageChargeTime,\n        convertTime(environment.simulation.truckUptime, 'h', 's')\n    );\n}\n\nfunction calulateCarsChargedPerDay() {\n    return Math.floor(calculateCarsChargedPerTruck() * environment.simulation.truckAmount);\n}\n\nfunction calulateCarsChargedPerMonth() {\n    return Math.floor(calculateCarsChargedPerTruck() * environment.simulation.truckAmount * 30.4);\n}\n\nfunction calulateCarsChargedPerYear() {\n    return Math.floor(calculateCarsChargedPerTruck() * environment.simulation.truckAmount * 365.25);\n}\n\nfunction calulateMaxTruckUptime() {\n    var chargingCapacity = calculateChargingCapacity(\n        environment.simulation.static.truck.capacity,\n        environment.simulation.static.truck.mileage,\n        environment.simulation.static.distanceToLocations\n    )\n\n    var amountOfCarsThatCanBeCharged = calculateAmountOfCarsThatCanBeCharged(\n        chargingCapacity,\n        environment.simulation.static.car.capacity,\n        environment.simulation.carChargeLimit\n    );\n    var travelTime = calculateTravelTime(\n        environment.simulation.static.distanceBetweenCharges,\n        environment.simulation.static.truck.averageSpeed\n    );\n    var chargeTime = calculateChargeTime(\n        environment.simulation.static.car.capacity,\n        environment.simulation.static.car.chargeSpeed,\n        environment.simulation.carChargeLimit\n    );\n\n    var chargeCycleTime = calculateChargeCycleTime(\n        amountOfCarsThatCanBeCharged,\n        travelTime,\n        chargeTime) + calculateTravelTime(\n            environment.simulation.static.distanceToLocations,\n            environment.simulation.static.truck.averageSpeed\n        ) * 1000\n\n    return prettyTime(chargeCycleTime);\n}\n\nvar outputs\n\nfunction updateCalculations() {\n    for(var outputId in outputs) {\n        var output = outputs[outputId]\n\n        output.element.html(output.calculate())\n    }\n}\n\n$(document).ready(function() {\n    outputs = {\n        chargesPerDay: {\n            element: $('#chargesPerDay'),\n            calculate: function() {\n                return calulateCarsChargedPerDay()\n            }\n        },\n        chargesPerMonth: {\n            element: $('#chargesPerMonth'),\n            calculate: function() {\n                return calulateCarsChargedPerMonth()\n            }\n        },\n        chargesPerYear: {\n            element: $('#chargesPerYear'),\n            calculate: function() {\n                return calulateCarsChargedPerYear()\n            }\n        },\n        maxTruckUptime: {\n            element: $('#maxTruckUptime'),\n            calculate: function() {\n                return calulateMaxTruckUptime()\n            }\n        }\n    }\n\n    updateCalculations()\n\n    $('#truckAmount').val(environment.simulation.truckAmount);\n    $('#truckUptime').val(environment.simulation.truckUptime);\n    $('#carAmount').val(environment.simulation.carAmount);\n    $('#carChargeLimit').val(environment.simulation.carChargeLimit);\n\n    $('#sidebar-toggle').click((event) => {\n        event.preventDefault()\n        $('body').toggleClass('nav-active');\n        window.dispatchEvent(new Event('resize'));\n    })\n\n    $('.param.draggable').each(function(i, el) {\n        var val = $(el).val()\n\n        if($(el).hasClass('unit-percent')) {\n            val *= 100\n        }\n\n        $(el).attr('data-value', Math.floor(val))\n    })\n\n    $('.param.draggable').on('input', function() {\n        var val = $(this).val()\n\n        if($(this).hasClass('unit-percent')) {\n            val *= 100\n        }\n\n        $(this).attr('data-value', Math.floor(val))\n    })\n\n    $('.param.numbers .subtract').click(function() {\n        var $input = $(this).siblings('.amount')\n        var val = Number($input.val())\n\n        if(val > 0) {\n            $input.val(val - 1)\n        }\n\n        $input.trigger('change')\n    })\n\n    $('.param.numbers .amount').change(function() {\n        var $input = $(this)\n        var val = Number($input.val())\n        var max = Number($input.attr('max'))\n\n        if(val > max) {\n            $input.val(max)\n        }\n\n        if(val < 0) {\n            $input.val(0)\n        }\n    })\n\n    $('.param.numbers .add').click(function() {\n        var $input = $(this).siblings('.amount')\n        var val = Number($input.val())\n        var max = Number($input.attr('max'))\n\n        if(val < max) {\n            $input.val(val + 1)\n        } else {\n            $input.val(max)\n        }\n\n        $input.trigger('change')\n    })\n\n    $('#truckAmount').change(function() {\n        var diff = Number($(this).val()) - environment.simulation.truckAmount\n\n        console.log('truckAmount changed by', diff)\n        updateAmountOfTrucks(diff)\n    })\n\n    $('#carAmount').change(function() {\n        var diff = Number($(this).val()) - environment.simulation.carAmount\n\n        console.log('carAmount changed by', diff)\n        updateAmountOfCars(diff)\n    })\n\n    $('#truckUptime').change(function() {\n        console.log('truckUptime changed')\n\n        // updateTruckUptime(Number($(this).val()))\n        environment.simulation.truckUptime = Number($(this).val());\n    })\n\n    $('#carChargeLimit').change(function() {\n        console.log('carChargeLimit changed')\n\n        environment.simulation.carChargeLimit = Number($(this).val())\n    })\n\n    $('.update-sim').change(function() {\n        updateCalculations()\n    })\n\n    var $chargeLabel = $('#average-charge > .bar > .progress > .amount')\n    var $chargeValue = $('#average-charge > .bar > .progress')\n\n    function updateAverageCharge() {\n        var val = Math.min(Math.max(Math.round(\n            environment.simulation.totalCarCharge /\n            environment.simulation.carCapacity /\n            environment.simulation.carChargeLimit\n        ), 0), 100) + '%'\n\n        $chargeLabel.html(val)\n        $chargeValue.css('width', val)\n    }\n\n    function delayedTick() {\n        updateAverageCharge()\n    }\n\n    delayedTick()\n\n    var tick = setInterval(delayedTick, 250)\n})\n\n"]}