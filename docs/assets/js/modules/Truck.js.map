{"version":3,"sources":["modules/Truck.js"],"names":["Truck","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","busy","location","Nodes","getStuttgart","position","createVector","x","y","capacity","charge","dischargeSpeed","type","workTarget","trucks","push","Vehicle","car","environment","simulation","carChargeLimit","chargeSpeed","diff","totalCarCharge","isStuck","city","needsCharging","parkedCars","id","length","rescueTarget","calculateAverageCharge","driveTo","chargeCar","chargeCity","applyMatrix","fill","strokeWeight","stroke","translate","scale","next","rotate","atan2","rect","truckSize","resetMatrix","isDriving","queue","name","updatePosition","render"],"mappings":"43BAAMA,kBACF,SAAAA,IAAcC,gBAAAC,KAAAF,GAAA,IAAAG,EAAAC,2BAAAF,MAAAF,EAAAK,WAAAC,OAAAC,eAAAP,IAAAQ,KAAAN,OAAA,OAGVC,EAAKM,MAAO,EACZN,EAAKO,SAAWC,MAAMC,eACtBT,EAAKU,SAAWC,aAAaX,EAAKO,SAASK,EAAGZ,EAAKO,SAASM,GAC5Db,EAAKc,SAAW,IAChBd,EAAKe,OAASf,EAAKc,SACnBd,EAAKgB,eAAiB,EATxBnB,EAUOoB,KAAO,QACZjB,EAAKkB,YAAa,EAVtBC,OAAAC,KAAApB,GAAcA,qBADEqB,yDACFC,GAgBV,GAAGA,EAAIP,OAASO,EAAIR,SAAWS,YAAYC,WAAWC,eAbtDH,EAAKhB,QAALgB,EAAAI,gBACKnB,CACL,GAAKG,EAAAA,OAAWC,EAAAA,SAAa,CACxBG,IAAAA,EAAWQ,EAAhBP,OAAAO,EAAAR,SAEKE,EAAAA,QAALW,EACKV,YAALO,WAAAI,gBAAAD,EAgBI5B,KAAKO,MAAO,EAbhBa,KAAOC,cAAP,EAZUE,EAAAO,SAAA,sCA+BHC,GACP,GAAGA,EAAKC,gBAAiB,CAhBzB,IAAGT,IAAIP,KAAJe,EAAaR,WAAb,CAAqE,IAAAA,EAAAQ,EAAAE,WAAAC,GAOhEV,GALDD,EAAAP,OAAAO,EAAAR,SAAAS,YAAAC,WAAAC,iBACAH,EAAIP,QAASO,EAAIR,YAAUgB,EAAAE,WAAAE,OAC1BX,YAAWD,WAAAM,gBAAXN,EAAAI,YAAAI,EAAAE,WAAAE,QAGAX,EAAAA,OAAYC,EAAAA,SAAWI,CAC1B,IAAAD,EAAAL,EAAAP,OAAAO,EAAAR,SAEDQ,EAAKa,QAALR,EACIE,YAAUL,WAAdI,gBAAAD,GAsBAG,EAAKM,8BAjBTrC,KAAG+B,MAAKC,EACJhC,KAAAoC,cAAcL,uCA2BlB,OAvBYR,KAAAA,MAAAA,EACAC,KAAAA,WAAAA,MAAAA,QAsBJxB,KAAKmB,WAAWD,MAnBhB,IAAA,MACIlB,KAAAsC,QAAAtC,KAAI4B,WAAWZ,UAqBvB,MAlBQQ,IAAAA,OACHxB,KAAAsC,QAAAtC,KAAAmB,4CA6BT,OAAQnB,KAAKmB,WAAWD,MACxB,IAAK,MACDlB,KAAKuC,UAAUvC,KAAKmB,YApBxB,MAuBA,IAAK,OApBLnB,KAAAwC,WAAarB,KAAAA,8CASbsB,cACIC,KAAA,WAVJC,aAAA,GAYHC,OAAA,WAsBGC,UAAU7C,KAAKW,SAASE,EAAIW,YAAYsB,MAAO9C,KAAKW,SAASG,EAAIU,YAAYsB,OAC1E9C,KAAK+C,MACJC,OAAOC,MAAMjD,KAAKW,SAtBnBG,EAAAd,KAAA+C,KAAAjC,EAAAd,KAAAW,SAAAE,EAAAb,KAAA+C,KAAAlC,IAEHqC,KACmB,MAAf1B,YAAKe,UACL,EAuBAf,YAAY2B,UAAY,IArB5B3B,YAAK2B,UAAL,IACI,GAwBJD,KArBA,EACI,EAVJ,IAAA1B,YAAA2B,UAYH3B,YAAA2B,UAuBO,GAEJC,+CAnBAR,KAAAA,OAAO5C,KAAPqD,UACAR,KAAAA,OACGS,MAAKP,SAAM/C,KAAAO,KACVyC,KAAAA,aACHhD,KAAAqD,WAAA,aAAArD,KAAAQ,SAAA+C,MACDL,KACIZ,QAACd,MAAY2B,gBAcpBnD,KAAAwD,iBAYGxD,KAAKyD","file":"Truck.js","sourcesContent":["class Truck extends Vehicle {\n    constructor() {\n        super()\n\n        this.busy = false;\n        this.location = Nodes.getStuttgart()\n        this.position = createVector(this.location.x, this.location.y);\n        this.capacity = 400\n        this.charge = this.capacity;\n        this.dischargeSpeed = 0;\n        this.type = 'truck'\n        this.workTarget = false\n\n        trucks.push(this)\n    }\n\n    chargeCar(car) {\n        if(car.charge / car.capacity < environment.simulation.carChargeLimit) { //car.charge / car.capacity < environment.simulation.carChargeLimit) {\n            car.charge += car.chargeSpeed\n        } else {\n            if(car.charge > car.capacity) {\n                var diff = car.charge - car.capacity\n\n                car.charge -= diff\n                environment.simulation.totalCarCharge -= diff\n            }\n            this.busy = false\n            this.rescueTarget = false\n            car.isStuck = false\n        }\n    }\n\n    chargeCity(city) {\n        if(city.needsCharging()) {\n            for(var id in city.parkedCars) {\n                var car = city.parkedCars[id];\n\n                if(car.charge / car.capacity < environment.simulation.carChargeLimit) { //car.charge / car.capacity < environment.simulation.carChargeLimit) {\n                    car.charge += car.chargeSpeed / city.parkedCars.length\n                    environment.simulation.totalCarCharge += car.chargeSpeed / city.parkedCars.length\n                }\n\n                if(car.charge > car.capacity) {\n                    var diff = car.charge - car.capacity\n\n                    car.charge -= diff\n                    environment.simulation.totalCarCharge -= diff\n                }\n            }\n\n            city.calculateAverageCharge();\n        } else {\n            this.busy = false\n            this.rescueTarget = false\n        }\n    }\n\n    getNewWork() {\n        this.busy = true;\n        this.workTarget = queue.shift();\n\n        switch (this.workTarget.type) {\n        case 'car':\n            this.driveTo(this.workTarget.location)\n            break;\n\n        case 'city':\n            this.driveTo(this.workTarget)\n            break;\n\n        default:\n            break;\n        }\n    }\n\n    work() {\n        switch (this.workTarget.type) {\n        case 'car':\n            this.chargeCar(this.workTarget);\n            break;\n\n        case 'city':\n            this.chargeCity(this.workTarget);\n            break;\n\n        default:\n            break;\n        }\n    }\n\n    render() {\n        applyMatrix()\n        fill('#444444')\n        strokeWeight(4)\n        stroke('#37BDFF')\n        translate(this.position.x * environment.scale, this.position.y * environment.scale)\n        if(this.next) {\n            rotate(atan2(this.position.y - this.next.y, this.position.x - this.next.x))\n        }\n        rect(\n            -environment.truckSize * 1.05,\n            0,\n            environment.truckSize / 1.5,\n            environment.truckSize / 1.5,\n            4\n        )\n        rect(\n            0,\n            0,\n            environment.truckSize * 1.5,\n            environment.truckSize,\n            4\n        )\n        resetMatrix()\n    }\n\n    update() {\n        if(this.busy && !this.isDriving) {\n            this.work()\n        } else if(queue.length && !this.busy) {\n            this.getNewWork()\n        } else if(!this.isDriving && this.location.name != 'Stuttgart') {\n            this.driveTo(Nodes.getStuttgart())\n        }\n\n        this.updatePosition()\n        this.render()\n    }\n}\n"]}