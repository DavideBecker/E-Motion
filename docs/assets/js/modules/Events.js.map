{"version":3,"sources":["modules/Events.js"],"names":["EventManager","_classCallCheck","this","tracker","flags","console","log","eventType","func","payload","Events"],"mappings":"6XAAMA,wBACF,SAAAA,IAAcC,gBAAAC,KAAAF,GACVE,KAAKC,WACLD,KAAKE,6DAHPJ,GACFK,QAAAC,IAAAC,EAAc,gBAQVL,KAAKE,MAAMG,IAAa,kCAL3BA,GASGF,QAAQC,IAAIC,EAAW,iBAEvBL,KAAKE,MAAMG,IAAa,mCAGnBA,GATL,OAAAL,KAAKE,MAAMG,8BAaZA,EAAWC,GACVH,QAAQC,IAAI,qBAAsBC,EAXnB,WAafL,KAAKC,QAAQI,GAAaC,kCAGtBD,EAAWE,GACfJ,QAAQC,IAAIC,EAAW,aAVvBL,KAAAC,QAAYC,KACfK,EAaWP,KAAKC,QAAQI,GAAWE,GAExBP,KAAKC,QAbdI,eAmBHG,OAAS,IAAIV","file":"Events.js","sourcesContent":["class EventManager {\n    constructor() {\n        this.tracker = {}\n        this.flags = {}\n    }\n\n    enable(eventType) {\n        console.log(eventType, 'flag enabled');\n\n        this.flags[eventType] = true\n    }\n\n    disable(eventType) {\n        console.log(eventType, 'flag disabled');\n\n        this.flags[eventType] = false\n    }\n\n    isActive(eventType) {\n        return this.flags[eventType]\n    }\n\n    on(eventType, func) {\n        console.log('Event listener for', eventType, 'created');\n\n        this.tracker[eventType] = func;\n    }\n\n    trigger(eventType, payload) {\n        console.log(eventType, 'triggered');\n\n        if(this.tracker[eventType]) {\n            if(payload) {\n                this.tracker[eventType](payload)\n            } else {\n                this.tracker[eventType]()\n            }\n        }\n    }\n}\n\nvar Events = new EventManager();\n"]}