{"version":3,"sources":["ui.js"],"names":["stuttgart","chargingCapacity","calculateChargingCapacity","environment","calculateCarsChargedPerTruck","truck","capacity","simulation","static","distanceToLocations","chargeTime","calculateChargeTime","chargeCycleTime","calculateChargeCycleTime","carChargeLimit","travelTime","calculateTravelTime","calculateChargeableCarsInTimeframe","averageSpeed","calulateCarsChargedPerDay","floor","car","chargeSpeed","amountOfCarsThatCanBeCharged","calulateMaxTruckUptime","averageChargeTime","convertTime","truckUptime","updateCalculations","Math","outputId","truckAmount","output","$","document","outputs","calculate","mileage","chargesPerMonth","calulateCarsChargedPerMonth","chargesPerYear","calulateCarsChargedPerYear","maxTruckUptime","element","val","prettyTime","each","html","Nodes","getByName","ready","updateAverageCharge","min","max","round","totalCarCharge","carCapacity","$chargeLabel","$chargeValue","css","delayedTick","chargesPerDay","attr","$input","Number","carAmount","click","event","preventDefault","toggleClass","window","dispatchEvent","Event","i","el","on","this","diff","siblings","console","log","trigger","change","setInterval","updateAmountOfTrucks","updateAmountOfCars"],"mappings":"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","file":"ui.js","sourcesContent":["var stuttgart = Nodes.getByName('Stuttgart');\n\nfunction calculateCarsChargedPerTruck() {\n    var chargingCapacity = calculateChargingCapacity(\n        environment.simulation.static.truck.capacity,\n        environment.simulation.static.truck.mileage,\n        environment.simulation.static.distanceToLocations\n    )\n\n    var amountOfCarsThatCanBeCharged = calculateAmountOfCarsThatCanBeCharged(\n        chargingCapacity,\n        environment.simulation.static.car.capacity,\n        environment.simulation.carChargeLimit\n    );\n    var travelTime = calculateTravelTime(\n        environment.simulation.static.distanceBetweenCharges,\n        environment.simulation.static.truck.averageSpeed\n    );\n    var chargeTime = calculateChargeTime(\n        environment.simulation.static.car.capacity,\n        environment.simulation.static.car.chargeSpeed,\n        environment.simulation.carChargeLimit\n    );\n\n    var chargeCycleTime = calculateChargeCycleTime(\n        amountOfCarsThatCanBeCharged,\n        travelTime,\n        chargeTime\n    ) + calculateTravelTime(\n            environment.simulation.static.distanceToLocations,\n            environment.simulation.static.truck.averageSpeed\n        ) * 1000\n\n    var averageChargeTime = calculateAverageChargeTime(\n        amountOfCarsThatCanBeCharged,\n        chargeCycleTime\n    );\n\n    return calculateChargeableCarsInTimeframe(\n        averageChargeTime,\n        convertTime(environment.simulation.truckUptime, 'h', 's')\n    );\n}\n\nfunction calulateCarsChargedPerDay() {\n    return Math.floor(calculateCarsChargedPerTruck() * environment.simulation.truckAmount);\n}\n\nfunction calulateCarsChargedPerMonth() {\n    return Math.floor(calculateCarsChargedPerTruck() * environment.simulation.truckAmount * 30.4);\n}\n\nfunction calulateCarsChargedPerYear() {\n    return Math.floor(calculateCarsChargedPerTruck() * environment.simulation.truckAmount * 365.25);\n}\n\nfunction calulateMaxTruckUptime() {\n    var chargingCapacity = calculateChargingCapacity(\n        environment.simulation.static.truck.capacity,\n        environment.simulation.static.truck.mileage,\n        environment.simulation.static.distanceToLocations\n    )\n\n    var amountOfCarsThatCanBeCharged = calculateAmountOfCarsThatCanBeCharged(\n        chargingCapacity,\n        environment.simulation.static.car.capacity,\n        environment.simulation.carChargeLimit\n    );\n    var travelTime = calculateTravelTime(\n        environment.simulation.static.distanceBetweenCharges,\n        environment.simulation.static.truck.averageSpeed\n    );\n    var chargeTime = calculateChargeTime(\n        environment.simulation.static.car.capacity,\n        environment.simulation.static.car.chargeSpeed,\n        environment.simulation.carChargeLimit\n    );\n\n    var chargeCycleTime = calculateChargeCycleTime(\n        amountOfCarsThatCanBeCharged,\n        travelTime,\n        chargeTime) + calculateTravelTime(\n            environment.simulation.static.distanceToLocations,\n            environment.simulation.static.truck.averageSpeed\n        ) * 1000\n\n    return prettyTime(chargeCycleTime);\n}\n\nvar outputs\n\nfunction updateCalculations() {\n    for(var outputId in outputs) {\n        var output = outputs[outputId]\n\n        output.element.html(output.calculate())\n    }\n}\n\n$(document).ready(function() {\n    outputs = {\n        chargesPerDay: {\n            element: $('#chargesPerDay'),\n            calculate: function() {\n                return calulateCarsChargedPerDay()\n            }\n        },\n        chargesPerMonth: {\n            element: $('#chargesPerMonth'),\n            calculate: function() {\n                return calulateCarsChargedPerMonth()\n            }\n        },\n        chargesPerYear: {\n            element: $('#chargesPerYear'),\n            calculate: function() {\n                return calulateCarsChargedPerYear()\n            }\n        },\n        maxTruckUptime: {\n            element: $('#maxTruckUptime'),\n            calculate: function() {\n                return calulateMaxTruckUptime()\n            }\n        }\n    }\n\n    updateCalculations()\n\n    $('#truckAmount').val(environment.simulation.truckAmount);\n    $('#truckUptime').val(environment.simulation.truckUptime);\n    $('#carAmount').val(environment.simulation.carAmount);\n    $('#carChargeLimit').val(environment.simulation.carChargeLimit);\n\n    $('#sidebar-toggle').click((event) => {\n        event.preventDefault()\n        $('body').toggleClass('nav-active');\n        window.dispatchEvent(new Event('resize'));\n    })\n\n    $('.param.draggable').each(function(i, el) {\n        var val = $(el).val()\n\n        if($(el).hasClass('unit-percent')) {\n            val *= 100\n        }\n\n        $(el).attr('data-value', Math.floor(val))\n    })\n\n    $('.param.draggable').on('input', function() {\n        var val = $(this).val()\n\n        if($(this).hasClass('unit-percent')) {\n            val *= 100\n        }\n\n        $(this).attr('data-value', Math.floor(val))\n    })\n\n    $('.param.numbers .subtract').click(function() {\n        var $input = $(this).siblings('.amount')\n        var val = Number($input.val())\n\n        if(val > 0) {\n            $input.val(val - 1)\n        }\n\n        $input.trigger('change')\n    })\n\n    $('.param.numbers .amount').change(function() {\n        var $input = $(this)\n        var val = Number($input.val())\n        var max = Number($input.attr('max'))\n\n        if(val > max) {\n            $input.val(max)\n        }\n\n        if(val < 0) {\n            $input.val(0)\n        }\n    })\n\n    $('.param.numbers .add').click(function() {\n        var $input = $(this).siblings('.amount')\n        var val = Number($input.val())\n        var max = Number($input.attr('max'))\n\n        if(val < max) {\n            $input.val(val + 1)\n        } else {\n            $input.val(max)\n        }\n\n        $input.trigger('change')\n    })\n\n    $('#truckAmount').change(function() {\n        var diff = Number($(this).val()) - environment.simulation.truckAmount\n\n        console.log('truckAmount changed by', diff)\n        updateAmountOfTrucks(diff)\n    })\n\n    $('#carAmount').change(function() {\n        var diff = Number($(this).val()) - environment.simulation.carAmount\n\n        console.log('carAmount changed by', diff)\n        updateAmountOfCars(diff)\n    })\n\n    $('#truckUptime').change(function() {\n        console.log('truckUptime changed')\n\n        // updateTruckUptime(Number($(this).val()))\n        environment.simulation.truckUptime = Number($(this).val());\n    })\n\n    $('#carChargeLimit').change(function() {\n        console.log('carChargeLimit changed')\n\n        environment.simulation.carChargeLimit = Number($(this).val())\n    })\n\n    $('.update-sim').change(function() {\n        updateCalculations()\n    })\n\n    var $chargeLabel = $('#average-charge > .bar > .progress > .amount')\n    var $chargeValue = $('#average-charge > .bar > .progress')\n\n    function updateAverageCharge() {\n        var val = Math.min(Math.max(Math.round(\n            environment.simulation.totalCarCharge /\n            environment.simulation.carCapacity /\n            environment.simulation.carChargeLimit\n        ), 0), 100) + '%'\n\n        $chargeLabel.html(val)\n        $chargeValue.css('width', val)\n    }\n\n    function delayedTick() {\n        updateAverageCharge()\n    }\n\n    delayedTick()\n\n    var tick = setInterval(delayedTick, 250)\n})\n\n"]}