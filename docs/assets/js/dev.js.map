{"version":3,"sources":["dev.js"],"names":["renderAllNodes","Nodes","forAll","id","node","fill","isCity","text","cityDict","x","environment","scale","y","size","ellipse","mousePressed","nodeIndex","dist","mouseX","mouseY","console","log","getById","i","cars","car","position","carSize","showPathFor","wroom","home","from","location","next","to","target","path","moveStack","prev","index","length","curr","stroke","line","debugMagic","debugged","obj","type"],"mappings":"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","file":"dev.js","sourcesContent":["function renderAllNodes() {\n    Nodes.forAll((id, node) => {\n        fill(51);\n\n        if(node.isCity) {\n            fill(50, 200, 0)\n            text(cityDict[node.id], node.x * environment.scale + 5, node.y * environment.scale - 5)\n        }\n\n        var size = 10;\n\n        ellipse(node.x * environment.scale, node.y * environment.scale, size, size)\n    })\n}\n\nfunction mousePressed() {\n    Nodes.forAll((nodeIndex, node) => {\n        if(dist(mouseX, mouseY, node.x * environment.scale, node.y * environment.scale) < 5) {\n            console.log('node clicked', Nodes.getById(nodeIndex));\n        }\n    })\n\n    for(var i in cars) {\n        var car = cars[i];\n\n        if(\n            mouseX > car.position.x * environment.scale &&\n            mouseX < car.position.x * environment.scale + environment.carSize &&\n            mouseY > car.position.y * environment.scale &&\n            mouseY < car.position.y * environment.scale + environment.carSize\n        ) {\n            console.log('car clicked', car);\n        }\n    }\n}\n\nfunction showPathFor(wroom) {\n\n    if(wroom) {\n        var home = wroom.home\n        var from = wroom.location\n        var next = wroom.next\n        var to = wroom.target\n        var path = wroom.moveStack\n\n        if(home) {\n            fill('#00FFFF')\n            ellipse(home.x * environment.scale, home.y * environment.scale, 20, 20)\n        }\n\n        if(from) {\n            fill('#FF0000')\n            ellipse(from.x * environment.scale, from.y * environment.scale, 15, 15)\n        }\n\n        if(to) {\n            fill('#00FF00')\n            ellipse(to.x * environment.scale, to.y * environment.scale, 10, 10)\n        }\n\n        if(next) {\n            fill('#0000FF')\n            ellipse(next.x * environment.scale, next.y * environment.scale, 5, 5)\n        }\n\n        var prev = wroom.position\n\n        for(var index = 0; index < path.length; index++) {\n            var curr = Nodes.getById(path[index])\n\n            stroke(100, 50, 0)\n            line(\n                curr.x * environment.scale,\n                curr.y * environment.scale,\n                prev.x * environment.scale,\n                prev.y * environment.scale\n            )\n            prev = curr\n        }\n    }\n}\n\nfunction debugMagic() {\n    for(var i in debugged) {\n        var obj = debugged[i];\n\n        if(obj.type == 'car') {\n            showPathFor(obj);\n        }\n    }\n}\n"]}