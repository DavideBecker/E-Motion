{"version":3,"sources":["dev.js"],"names":["renderAllNodes","Nodes","forAll","id","node","fill","isCity","x","environment","scale","y","ellipse","size","mousePressed","nodeIndex","mouseY","log","getById","i","cars","car","mouseX","position","console","carSize","showPathFor","wroom","next","to","target","path","moveStack","home","from","prev","stroke","curr","index","length","line","debugMagic","debugged","obj","type"],"mappings":"aAAA,SAASA,iBACLC,MAAMC,OAAO,SAACC,EAAIC,GADtBC,KAASL,IAEDK,EAAAC,SAGID,KAAK,GAAI,IAAK,GADfD,KAAKE,SAAQF,EAAAD,IAAAC,EAAAG,EAAAC,YAAAC,MAAA,EAAAL,EAAAM,EAAAF,YAAAC,MAAA,IAKhBE,QAAIC,EAAJL,EAAAC,YAAAC,MAAAL,EAAAM,EAAAF,YAAAC,MAFC,GAAA,MAMR,SAAAI,eAGGZ,MAAMC,OAAO,SAACY,EAAWV,GADpBS,KAAAA,OAAeE,OAAAX,EAAAG,EAAAC,YAAAC,MAAAL,EAAAM,EAAAF,YAAAC,OAAA,GACdP,QAAOc,IAAA,eAAYZ,MAASa,QAAAH,MAIjC,IAJD,IAAAI,KAAAC,KAAA,CAOI,IAAIC,EAAMD,KAAKD,GAGXG,OAASD,EAAIE,SAASf,EAAIC,YAAYC,OAAtCY,OAASD,EAAIE,SAASf,EAAIC,YAAYC,MAAtCD,YACSY,SAITG,OAAQP,EAAIM,SAAAZ,EAAZF,YAAAC,OACHM,OAAAK,EAAAE,SAAAZ,EAAAF,YAAAC,MAAAD,YAAAgB,SAERD,QAAAP,IAAA,cAAAI,IAKO,SAAAK,YAAWC,GAEX,GAAAA,EAAIC,CACJ,IAAIC,EAAKF,EAAMG,KACXC,EAAOJ,EAAMK,SAFbJ,EAAOD,EAAMC,KAIdK,EAAHN,EAASG,OACLxB,EAAKqB,EAAAK,UAERC,IAFG3B,KAAK,WAIN4B,QAAMD,EAAAzB,EAAAC,YAAAC,MAAAuB,EAAAtB,EAAAF,YAAAC,MAAA,GAAA,KAGRwB,IAFG5B,KAAK,WAINuB,QAAIK,EAAA1B,EAAAC,YAAAC,MAAAwB,EAAAvB,EAAAF,YAAAC,MAAA,GAAA,KAGNmB,IAFGvB,KAAK,WAINsB,QAAMC,EAAArB,EAAAC,YAAAC,MAAAmB,EAAAlB,EAAAF,YAAAC,MAAA,GAAA,KAGRkB,IAFGtB,KAAK,WAIL6B,QAAOR,EAAMJ,EAAAA,YAAjBb,MAAAkB,EAAAjB,EAAAF,YAAAC,MAAA,EAAA,IAKI0B,IAAAA,IAFAD,EAAIE,EAAOnC,SAEXkC,EAAY,EAAZE,EAAAP,EAAAQ,OAAAD,IAAA,CACAE,IAAAA,EACItC,MAASO,QAAAA,EAAYC,IAM5B0B,OAAA,IAAA,GAAA,GACJI,KACJH,EAAA7B,EAAAC,YAAAC,MAPe2B,EAAK1B,EAAIF,YAAYC,MAS5B+B,EAATjC,EAAsBC,YAAAC,MAClByB,EAAaO,EAAAA,YAAUhC,OANfyB,EAAOE,IAalB,SAAAI,aAPG,IAAI,IAAItB,KAAKuB,SAAU,CACnB,IAAIC,EAAMD,SAASvB,GAEJ,OAAZwB,EAAIC,MACHlB,YAAYiB","file":"dev.js","sourcesContent":["function renderAllNodes() {\n    Nodes.forAll((id, node) => {\n        fill(51);\n\n        if(node.isCity) {\n            fill(50, 200, 0)\n            text(cityDict[node.id], node.x * environment.scale + 5, node.y * environment.scale - 5)\n        }\n\n        var size = 10;\n\n        ellipse(node.x * environment.scale, node.y * environment.scale, size, size)\n    })\n}\n\nfunction mousePressed() {\n    Nodes.forAll((nodeIndex, node) => {\n        if(dist(mouseX, mouseY, node.x * environment.scale, node.y * environment.scale) < 5) {\n            console.log('node clicked', Nodes.getById(nodeIndex));\n        }\n    })\n\n    for(var i in cars) {\n        var car = cars[i];\n\n        if(\n            mouseX > car.position.x * environment.scale &&\n            mouseX < car.position.x * environment.scale + environment.carSize &&\n            mouseY > car.position.y * environment.scale &&\n            mouseY < car.position.y * environment.scale + environment.carSize\n        ) {\n            console.log('car clicked', car);\n        }\n    }\n}\n\nfunction showPathFor(wroom) {\n\n    if(wroom) {\n        var home = wroom.home\n        var from = wroom.location\n        var next = wroom.next\n        var to = wroom.target\n        var path = wroom.moveStack\n\n        if(home) {\n            fill('#00FFFF')\n            ellipse(home.x * environment.scale, home.y * environment.scale, 20, 20)\n        }\n\n        if(from) {\n            fill('#FF0000')\n            ellipse(from.x * environment.scale, from.y * environment.scale, 15, 15)\n        }\n\n        if(to) {\n            fill('#00FF00')\n            ellipse(to.x * environment.scale, to.y * environment.scale, 10, 10)\n        }\n\n        if(next) {\n            fill('#0000FF')\n            ellipse(next.x * environment.scale, next.y * environment.scale, 5, 5)\n        }\n\n        var prev = wroom.position\n\n        for(var index = 0; index < path.length; index++) {\n            var curr = Nodes.getById(path[index])\n\n            stroke(100, 50, 0)\n            line(\n                curr.x * environment.scale,\n                curr.y * environment.scale,\n                prev.x * environment.scale,\n                prev.y * environment.scale\n            )\n            prev = curr\n        }\n    }\n}\n\nfunction debugMagic() {\n    for(var i in debugged) {\n        var obj = debugged[i];\n\n        if(obj.type == 'car') {\n            showPathFor(obj);\n        }\n    }\n}\n"]}