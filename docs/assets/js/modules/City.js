"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),cities=[],City=function(e){function t(e){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.parkedCars=[],r.charge=1,r.name=cityDict[r.id],r.type="city",cities.push(r),r}return _inherits(t,Node),_createClass(t,[{key:"sendCarTo",value:function(e){this.parkedCars.length&&this.parkedCars.pop().driveTo(e)}},{key:"needsCharging",value:function(){return this.parkedCars.find(function(e){return e.charge/e.capacity<environment.simulation.carChargeLimit})}},{key:"updateAverageCharge",value:function(e){this.parkedCars.length?this.charge=this.charge+(e-this.charge)/this.parkedCars.length:this.charge=1}},{key:"calculateAverageCharge",value:function(){var e=0;for(var t in this.parkedCars){var r=this.parkedCars[t];e+=r.charge/r.capacity}this.charge=e/this.parkedCars.length}},{key:"sendCarHome",value:function(){if(this.parkedCars.length){var e=this.parkedCars.pop();this.updateAverageCharge(e.getChargePercentage()),e.driveHome()}}},{key:"render",value:function(){fill(20),noStroke(),this.parkedCars.length&&fill(chargeToColor(this.charge)),"Stuttgart"==this.name?ellipse(this.x*environment.scale,this.y*environment.scale,35*environment.scale,35*environment.scale):ellipse(this.x*environment.scale,this.y*environment.scale,20*environment.scale,20*environment.scale)}},{key:"update",value:function(){this.render()}}]),t}();
//# sourceMappingURL=City.js.map
